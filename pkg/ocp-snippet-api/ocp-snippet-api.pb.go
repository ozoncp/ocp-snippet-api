// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: api/ocp-snippet-api/ocp-snippet-api.proto

package ocp_snippet_api

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Создание:
type CreateSnippetV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SolutionId uint64 `protobuf:"varint,1,opt,name=solution_id,json=solutionId,proto3" json:"solution_id,omitempty"`
	UserId     uint64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Text       string `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	Language   string `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *CreateSnippetV1Request) Reset() {
	*x = CreateSnippetV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_snippet_api_ocp_snippet_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSnippetV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSnippetV1Request) ProtoMessage() {}

func (x *CreateSnippetV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_snippet_api_ocp_snippet_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSnippetV1Request.ProtoReflect.Descriptor instead.
func (*CreateSnippetV1Request) Descriptor() ([]byte, []int) {
	return file_api_ocp_snippet_api_ocp_snippet_api_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSnippetV1Request) GetSolutionId() uint64 {
	if x != nil {
		return x.SolutionId
	}
	return 0
}

func (x *CreateSnippetV1Request) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateSnippetV1Request) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *CreateSnippetV1Request) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type CreateSnippetV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateSnippetV1Response) Reset() {
	*x = CreateSnippetV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_snippet_api_ocp_snippet_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSnippetV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSnippetV1Response) ProtoMessage() {}

func (x *CreateSnippetV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_snippet_api_ocp_snippet_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSnippetV1Response.ProtoReflect.Descriptor instead.
func (*CreateSnippetV1Response) Descriptor() ([]byte, []int) {
	return file_api_ocp_snippet_api_ocp_snippet_api_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSnippetV1Response) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Чтение:
type DescribeSnippetV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnippetId uint64 `protobuf:"varint,1,opt,name=snippet_id,json=snippetId,proto3" json:"snippet_id,omitempty"`
}

func (x *DescribeSnippetV1Request) Reset() {
	*x = DescribeSnippetV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_snippet_api_ocp_snippet_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeSnippetV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeSnippetV1Request) ProtoMessage() {}

func (x *DescribeSnippetV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_snippet_api_ocp_snippet_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeSnippetV1Request.ProtoReflect.Descriptor instead.
func (*DescribeSnippetV1Request) Descriptor() ([]byte, []int) {
	return file_api_ocp_snippet_api_ocp_snippet_api_proto_rawDescGZIP(), []int{2}
}

func (x *DescribeSnippetV1Request) GetSnippetId() uint64 {
	if x != nil {
		return x.SnippetId
	}
	return 0
}

type DescribeSnippetV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Snippet *Snippet `protobuf:"bytes,1,opt,name=snippet,proto3" json:"snippet,omitempty"`
}

func (x *DescribeSnippetV1Response) Reset() {
	*x = DescribeSnippetV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_snippet_api_ocp_snippet_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeSnippetV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeSnippetV1Response) ProtoMessage() {}

func (x *DescribeSnippetV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_snippet_api_ocp_snippet_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeSnippetV1Response.ProtoReflect.Descriptor instead.
func (*DescribeSnippetV1Response) Descriptor() ([]byte, []int) {
	return file_api_ocp_snippet_api_ocp_snippet_api_proto_rawDescGZIP(), []int{3}
}

func (x *DescribeSnippetV1Response) GetSnippet() *Snippet {
	if x != nil {
		return x.Snippet
	}
	return nil
}

// Получение списка:
type ListSnippetsV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  uint64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset uint64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *ListSnippetsV1Request) Reset() {
	*x = ListSnippetsV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_snippet_api_ocp_snippet_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSnippetsV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSnippetsV1Request) ProtoMessage() {}

func (x *ListSnippetsV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_snippet_api_ocp_snippet_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSnippetsV1Request.ProtoReflect.Descriptor instead.
func (*ListSnippetsV1Request) Descriptor() ([]byte, []int) {
	return file_api_ocp_snippet_api_ocp_snippet_api_proto_rawDescGZIP(), []int{4}
}

func (x *ListSnippetsV1Request) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListSnippetsV1Request) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ListSnippetsV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Snippets []*Snippet `protobuf:"bytes,1,rep,name=snippets,proto3" json:"snippets,omitempty"`
}

func (x *ListSnippetsV1Response) Reset() {
	*x = ListSnippetsV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_snippet_api_ocp_snippet_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSnippetsV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSnippetsV1Response) ProtoMessage() {}

func (x *ListSnippetsV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_snippet_api_ocp_snippet_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSnippetsV1Response.ProtoReflect.Descriptor instead.
func (*ListSnippetsV1Response) Descriptor() ([]byte, []int) {
	return file_api_ocp_snippet_api_ocp_snippet_api_proto_rawDescGZIP(), []int{5}
}

func (x *ListSnippetsV1Response) GetSnippets() []*Snippet {
	if x != nil {
		return x.Snippets
	}
	return nil
}

// Удаление:
type RemoveSnippetV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnippetId uint64 `protobuf:"varint,1,opt,name=snippet_id,json=snippetId,proto3" json:"snippet_id,omitempty"`
}

func (x *RemoveSnippetV1Request) Reset() {
	*x = RemoveSnippetV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_snippet_api_ocp_snippet_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveSnippetV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSnippetV1Request) ProtoMessage() {}

func (x *RemoveSnippetV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_snippet_api_ocp_snippet_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSnippetV1Request.ProtoReflect.Descriptor instead.
func (*RemoveSnippetV1Request) Descriptor() ([]byte, []int) {
	return file_api_ocp_snippet_api_ocp_snippet_api_proto_rawDescGZIP(), []int{6}
}

func (x *RemoveSnippetV1Request) GetSnippetId() uint64 {
	if x != nil {
		return x.SnippetId
	}
	return 0
}

type RemoveSnippetV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Removed bool `protobuf:"varint,1,opt,name=removed,proto3" json:"removed,omitempty"`
}

func (x *RemoveSnippetV1Response) Reset() {
	*x = RemoveSnippetV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_snippet_api_ocp_snippet_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveSnippetV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSnippetV1Response) ProtoMessage() {}

func (x *RemoveSnippetV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_snippet_api_ocp_snippet_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSnippetV1Response.ProtoReflect.Descriptor instead.
func (*RemoveSnippetV1Response) Descriptor() ([]byte, []int) {
	return file_api_ocp_snippet_api_ocp_snippet_api_proto_rawDescGZIP(), []int{7}
}

func (x *RemoveSnippetV1Response) GetRemoved() bool {
	if x != nil {
		return x.Removed
	}
	return false
}

type Snippet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SolutionId uint64 `protobuf:"varint,2,opt,name=solution_id,json=solutionId,proto3" json:"solution_id,omitempty"`
	UserId     uint64 `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Text       string `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	Language   string `protobuf:"bytes,5,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *Snippet) Reset() {
	*x = Snippet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_snippet_api_ocp_snippet_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Snippet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Snippet) ProtoMessage() {}

func (x *Snippet) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_snippet_api_ocp_snippet_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Snippet.ProtoReflect.Descriptor instead.
func (*Snippet) Descriptor() ([]byte, []int) {
	return file_api_ocp_snippet_api_ocp_snippet_api_proto_rawDescGZIP(), []int{8}
}

func (x *Snippet) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Snippet) GetSolutionId() uint64 {
	if x != nil {
		return x.SolutionId
	}
	return 0
}

func (x *Snippet) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Snippet) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Snippet) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

var File_api_ocp_snippet_api_ocp_snippet_api_proto protoreflect.FileDescriptor

var file_api_ocp_snippet_api_ocp_snippet_api_proto_rawDesc = []byte{
	0x0a, 0x29, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x63, 0x70, 0x2d, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65,
	0x74, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x63, 0x70, 0x2d, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65,
	0x74, 0x2d, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x6f, 0x63, 0x70,
	0x2e, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x41, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x82, 0x01,
	0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x56,
	0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x6c, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x73,
	0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x22, 0x29, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x69, 0x70,
	0x70, 0x65, 0x74, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x42, 0x0a,
	0x18, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74,
	0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0a, 0x73, 0x6e, 0x69,
	0x70, 0x70, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x09, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x49,
	0x64, 0x22, 0x4f, 0x0a, 0x19, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x6e, 0x69,
	0x70, 0x70, 0x65, 0x74, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32,
	0x0a, 0x07, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6f, 0x63, 0x70, 0x2e, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x52, 0x07, 0x73, 0x6e, 0x69, 0x70, 0x70,
	0x65, 0x74, 0x22, 0x45, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65,
	0x74, 0x73, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x4e, 0x0a, 0x16, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x73, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x63, 0x70, 0x2e, 0x73, 0x6e, 0x69, 0x70,
	0x70, 0x65, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x52,
	0x08, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x73, 0x22, 0x40, 0x0a, 0x16, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0a, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00,
	0x52, 0x09, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x17, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x56, 0x31, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64,
	0x22, 0x83, 0x01, 0x0a, 0x07, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x32, 0xbb, 0x04, 0x0a, 0x0d, 0x4f, 0x63, 0x70, 0x53, 0x6e,
	0x69, 0x70, 0x70, 0x65, 0x74, 0x41, 0x70, 0x69, 0x12, 0x81, 0x01, 0x0a, 0x0f, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x56, 0x31, 0x12, 0x27, 0x2e, 0x6f,
	0x63, 0x70, 0x2e, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x56, 0x31, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6f, 0x63, 0x70, 0x2e, 0x73, 0x6e, 0x69, 0x70,
	0x70, 0x65, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6e,
	0x69, 0x70, 0x70, 0x65, 0x74, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x22, 0x13, 0x2f, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65,
	0x74, 0x73, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x12, 0x96, 0x01, 0x0a,
	0x11, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74,
	0x56, 0x31, 0x12, 0x29, 0x2e, 0x6f, 0x63, 0x70, 0x2e, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x6e, 0x69,
	0x70, 0x70, 0x65, 0x74, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e,
	0x6f, 0x63, 0x70, 0x2e, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x56,
	0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x24, 0x12, 0x22, 0x2f, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x73, 0x2f, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x7c, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6e, 0x69,
	0x70, 0x70, 0x65, 0x74, 0x73, 0x56, 0x31, 0x12, 0x26, 0x2e, 0x6f, 0x63, 0x70, 0x2e, 0x73, 0x6e,
	0x69, 0x70, 0x70, 0x65, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6e,
	0x69, 0x70, 0x70, 0x65, 0x74, 0x73, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x6f, 0x63, 0x70, 0x2e, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x73, 0x56, 0x31,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13,
	0x12, 0x11, 0x2f, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x73, 0x2f, 0x6c, 0x69, 0x73, 0x74,
	0x2f, 0x76, 0x31, 0x12, 0x8e, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x6e,
	0x69, 0x70, 0x70, 0x65, 0x74, 0x56, 0x31, 0x12, 0x27, 0x2e, 0x6f, 0x63, 0x70, 0x2e, 0x73, 0x6e,
	0x69, 0x70, 0x70, 0x65, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x28, 0x2e, 0x6f, 0x63, 0x70, 0x2e, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74,
	0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x22, 0x2a, 0x20, 0x2f, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x73, 0x2f, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74,
	0x5f, 0x69, 0x64, 0x7d, 0x42, 0x47, 0x5a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6f, 0x7a, 0x6f, 0x6e, 0x63, 0x70, 0x2f, 0x6f, 0x63, 0x70, 0x2d, 0x73, 0x6e,
	0x69, 0x70, 0x70, 0x65, 0x74, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6f, 0x63,
	0x70, 0x2d, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x2d, 0x61, 0x70, 0x69, 0x3b, 0x6f, 0x63,
	0x70, 0x5f, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_ocp_snippet_api_ocp_snippet_api_proto_rawDescOnce sync.Once
	file_api_ocp_snippet_api_ocp_snippet_api_proto_rawDescData = file_api_ocp_snippet_api_ocp_snippet_api_proto_rawDesc
)

func file_api_ocp_snippet_api_ocp_snippet_api_proto_rawDescGZIP() []byte {
	file_api_ocp_snippet_api_ocp_snippet_api_proto_rawDescOnce.Do(func() {
		file_api_ocp_snippet_api_ocp_snippet_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_ocp_snippet_api_ocp_snippet_api_proto_rawDescData)
	})
	return file_api_ocp_snippet_api_ocp_snippet_api_proto_rawDescData
}

var file_api_ocp_snippet_api_ocp_snippet_api_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_api_ocp_snippet_api_ocp_snippet_api_proto_goTypes = []interface{}{
	(*CreateSnippetV1Request)(nil),    // 0: ocp.snippet.api.CreateSnippetV1Request
	(*CreateSnippetV1Response)(nil),   // 1: ocp.snippet.api.CreateSnippetV1Response
	(*DescribeSnippetV1Request)(nil),  // 2: ocp.snippet.api.DescribeSnippetV1Request
	(*DescribeSnippetV1Response)(nil), // 3: ocp.snippet.api.DescribeSnippetV1Response
	(*ListSnippetsV1Request)(nil),     // 4: ocp.snippet.api.ListSnippetsV1Request
	(*ListSnippetsV1Response)(nil),    // 5: ocp.snippet.api.ListSnippetsV1Response
	(*RemoveSnippetV1Request)(nil),    // 6: ocp.snippet.api.RemoveSnippetV1Request
	(*RemoveSnippetV1Response)(nil),   // 7: ocp.snippet.api.RemoveSnippetV1Response
	(*Snippet)(nil),                   // 8: ocp.snippet.api.Snippet
}
var file_api_ocp_snippet_api_ocp_snippet_api_proto_depIdxs = []int32{
	8, // 0: ocp.snippet.api.DescribeSnippetV1Response.snippet:type_name -> ocp.snippet.api.Snippet
	8, // 1: ocp.snippet.api.ListSnippetsV1Response.snippets:type_name -> ocp.snippet.api.Snippet
	0, // 2: ocp.snippet.api.OcpSnippetApi.CreateSnippetV1:input_type -> ocp.snippet.api.CreateSnippetV1Request
	2, // 3: ocp.snippet.api.OcpSnippetApi.DescribeSnippetV1:input_type -> ocp.snippet.api.DescribeSnippetV1Request
	4, // 4: ocp.snippet.api.OcpSnippetApi.ListSnippetsV1:input_type -> ocp.snippet.api.ListSnippetsV1Request
	6, // 5: ocp.snippet.api.OcpSnippetApi.RemoveSnippetV1:input_type -> ocp.snippet.api.RemoveSnippetV1Request
	1, // 6: ocp.snippet.api.OcpSnippetApi.CreateSnippetV1:output_type -> ocp.snippet.api.CreateSnippetV1Response
	3, // 7: ocp.snippet.api.OcpSnippetApi.DescribeSnippetV1:output_type -> ocp.snippet.api.DescribeSnippetV1Response
	5, // 8: ocp.snippet.api.OcpSnippetApi.ListSnippetsV1:output_type -> ocp.snippet.api.ListSnippetsV1Response
	7, // 9: ocp.snippet.api.OcpSnippetApi.RemoveSnippetV1:output_type -> ocp.snippet.api.RemoveSnippetV1Response
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_api_ocp_snippet_api_ocp_snippet_api_proto_init() }
func file_api_ocp_snippet_api_ocp_snippet_api_proto_init() {
	if File_api_ocp_snippet_api_ocp_snippet_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_ocp_snippet_api_ocp_snippet_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSnippetV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_snippet_api_ocp_snippet_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSnippetV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_snippet_api_ocp_snippet_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeSnippetV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_snippet_api_ocp_snippet_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeSnippetV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_snippet_api_ocp_snippet_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSnippetsV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_snippet_api_ocp_snippet_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSnippetsV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_snippet_api_ocp_snippet_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveSnippetV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_snippet_api_ocp_snippet_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveSnippetV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_snippet_api_ocp_snippet_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Snippet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_ocp_snippet_api_ocp_snippet_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_ocp_snippet_api_ocp_snippet_api_proto_goTypes,
		DependencyIndexes: file_api_ocp_snippet_api_ocp_snippet_api_proto_depIdxs,
		MessageInfos:      file_api_ocp_snippet_api_ocp_snippet_api_proto_msgTypes,
	}.Build()
	File_api_ocp_snippet_api_ocp_snippet_api_proto = out.File
	file_api_ocp_snippet_api_ocp_snippet_api_proto_rawDesc = nil
	file_api_ocp_snippet_api_ocp_snippet_api_proto_goTypes = nil
	file_api_ocp_snippet_api_ocp_snippet_api_proto_depIdxs = nil
}
