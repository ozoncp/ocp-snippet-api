syntax = "proto3";

import "google/api/annotations.proto";
import "github.com/envoyproxy/protoc-gen-validate/validate/validate.proto";

option go_package = "github.com/ozoncp/ocp-snippet-api/pkg/ocp-snippet-api;ocp_snippet_api";

package ocp.snippet.api;

service OcpSnippetApi {

	//  Создаёт новый фрагмент решения
	rpc CreateSnippetV1(CreateSnippetV1Request) returns (CreateSnippetV1Response) {
		option (google.api.http) = {
			post: "/snippets/create/v1"
			body: "*"
		};
	}

	//  Создаёт несколько новых фрагментов решения
	rpc MultiCreateSnippetV1(MultiCreateSnippetV1Request) returns (MultiCreateSnippetV1Response) {
		option (google.api.http) = {
			post: "/snippets/multi_create/v1"
			body: "*"
		};
	}

	// Возвращает фрагмент решения
	rpc DescribeSnippetV1(DescribeSnippetV1Request) returns (DescribeSnippetV1Response) {
		option (google.api.http) = {
			get: "/snippets/describe/v1/{snippet_id}"
		};
	}
	
	// Возвращает список фрагментов решения
	rpc ListSnippetsV1(ListSnippetsV1Request) returns (ListSnippetsV1Response) {
		option (google.api.http) = {
			get: "/snippets/list/v1"
		};
	}

	//  Обнавляет фрагмент решения по его Id
	rpc UpdateSnippetV1(UpdateSnippetV1Request) returns (UpdateSnippetV1Response) {
		option (google.api.http) = {
			post: "/snippets/update/v1"
			body: "*"
		};
	}
	
	// Удаляет фрагмент решения
	rpc RemoveSnippetV1(RemoveSnippetV1Request) returns (RemoveSnippetV1Response) {
		option (google.api.http) = {
			delete: "/snippets/remove/v1/{snippet_id}"
		};
	}
	
	// Восстанавливает фрагмент решения
	rpc RestoreSnippetV1(RestoreSnippetV1Request) returns (RestoreSnippetV1Response) {
		option (google.api.http) = {
			post: "/snippets/restore/v1/{snippet_id}"
		};
	}
}

// Создание:
message CreateSnippetV1Request {
	uint64 solution_id = 1 [(validate.rules).uint64.gt = 0];
	string text        = 3;
	string language    = 4;
}
message CreateSnippetV1Response {
	uint64 id = 1;
}
message MultiCreateSnippetV1Request {
	repeated CreateSnippetV1Request snippets = 1;
}
message MultiCreateSnippetV1Response {
	repeated uint64 ids = 1;
}

// Чтение:
message DescribeSnippetV1Request {
	uint64 snippet_id = 1 [(validate.rules).uint64.gt = 0];
}
message DescribeSnippetV1Response {
	Snippet snippet = 1;
}
 
// Получение списка:
message ListSnippetsV1Request {
	uint64 limit = 1 [(validate.rules).uint64.gt = 0];
	uint64 offset = 2 [(validate.rules).uint64.gt = 0];
}
message ListSnippetsV1Response {
	repeated Snippet snippets = 1;
}
 
// Получение списка:
message UpdateSnippetV1Request {
	uint64 id          = 1 [(validate.rules).uint64.gt = 0];
	uint64 solution_id = 2 [(validate.rules).uint64.gt = 0];
	string text        = 4;
	string language    = 5;
}
message UpdateSnippetV1Response {
	bool updated = 1;
}

// Удаление:
message RemoveSnippetV1Request {
	uint64 snippet_id = 1 [(validate.rules).uint64.gt = 0];
}
message RemoveSnippetV1Response {
	bool removed = 1;
}

// Восстановление:
message RestoreSnippetV1Request {
	uint64 snippet_id = 1 [(validate.rules).uint64.gt = 0];
}
message RestoreSnippetV1Response {
	bool restored = 1;
}


message Snippet {
	uint64 id          = 1 [(validate.rules).uint64.gt = 0];
	uint64 solution_id = 2 [(validate.rules).uint64.gt = 0];
	string text        = 4;
	string language    = 5;
}